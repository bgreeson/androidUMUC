package testharness;

import java.awt.Color;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

public class TestHarnessUI extends javax.swing.JFrame
{
    private StorageTool fileTool = new StorageTool();

    /**
     * Creates new form TestHarnessUI
     */
    public TestHarnessUI()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents()
    {

        jFileChooser1 = new javax.swing.JFileChooser();
        Input = new javax.swing.JPanel();
        storagePanel = new javax.swing.JPanel();
        fileNameField = new javax.swing.JTextField();
        fileSrchBtn = new javax.swing.JButton();
        fileUpldBtn = new javax.swing.JButton();
        fileDeltBtn = new javax.swing.JButton();
        fileContBtn = new javax.swing.JButton();
        fileMetaBtn = new javax.swing.JButton();
        databasePanel = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        userRgtrBtn = new javax.swing.JButton();
        userSrchBtn = new javax.swing.JButton();
        Output = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Input.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SoundWave Test Harness v1.0", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Arial", 0, 18))); // NOI18N
        Input.setName("Input"); // NOI18N

        storagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "STORAGE CONTROLS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        fileNameField.setForeground(new java.awt.Color(153, 153, 153));
        fileNameField.setText("File Name...");
        fileNameField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        fileNameField.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                fileNameFieldMouseClicked(evt);
            }
        });

        fileSrchBtn.setText("SEARCH");
        fileSrchBtn.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                fileSrchBtnMouseClicked(evt);
            }
        });

        fileUpldBtn.setText("UPLOAD");
        fileUpldBtn.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                fileUpldBtnMouseClicked(evt);
            }
        });

        fileDeltBtn.setText("DELETE");
        fileDeltBtn.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                fileDeltBtnMouseClicked(evt);
            }
        });

        fileContBtn.setText("CONTENTS");
        fileContBtn.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                fileContBtnMouseClicked(evt);
            }
        });

        fileMetaBtn.setText("METADATA");
        fileMetaBtn.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                fileMetaBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout storagePanelLayout = new javax.swing.GroupLayout(storagePanel);
        storagePanel.setLayout(storagePanelLayout);
        storagePanelLayout.setHorizontalGroup(
            storagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fileNameField)
            .addGroup(storagePanelLayout.createSequentialGroup()
                .addGroup(storagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fileContBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fileUpldBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fileSrchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fileMetaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fileDeltBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 234, Short.MAX_VALUE))
        );
        storagePanelLayout.setVerticalGroup(
            storagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(storagePanelLayout.createSequentialGroup()
                .addComponent(fileNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileSrchBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileDeltBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileUpldBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileContBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(fileMetaBtn))
        );

        databasePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATABASE CONTROLS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setText("Name");
        jTextField1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTextField1MouseClicked(evt);
            }
        });

        jTextField2.setForeground(new java.awt.Color(153, 153, 153));
        jTextField2.setText("Phone");
        jTextField2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTextField2MouseClicked(evt);
            }
        });

        jTextField3.setForeground(new java.awt.Color(153, 153, 153));
        jTextField3.setText("eMail");
        jTextField3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTextField3MouseClicked(evt);
            }
        });

        jTextField4.setForeground(new java.awt.Color(153, 153, 153));
        jTextField4.setText("Address");
        jTextField4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextField4.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jTextField4MouseClicked(evt);
            }
        });

        userRgtrBtn.setText("REGISTER");
        userRgtrBtn.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                userRgtrBtnMouseClicked(evt);
            }
        });

        userSrchBtn.setText("SEARCH");
        userSrchBtn.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                userSrchBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout databasePanelLayout = new javax.swing.GroupLayout(databasePanel);
        databasePanel.setLayout(databasePanelLayout);
        databasePanelLayout.setHorizontalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jTextField3)
            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addGroup(databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userRgtrBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userSrchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 246, Short.MAX_VALUE))
        );
        databasePanelLayout.setVerticalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(userRgtrBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userSrchBtn)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout InputLayout = new javax.swing.GroupLayout(Input);
        Input.setLayout(InputLayout);
        InputLayout.setHorizontalGroup(
            InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputLayout.createSequentialGroup()
                .addComponent(storagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(databasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        InputLayout.setVerticalGroup(
            InputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(databasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(storagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Output.setName("Output"); // NOI18N

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout OutputLayout = new javax.swing.GroupLayout(Output);
        Output.setLayout(OutputLayout);
        OutputLayout.setHorizontalGroup(
            OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        OutputLayout.setVerticalGroup(
            OutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void fileUpldBtnMouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        //FileNameExtensionFilter filter = new FileNameExtensionFilter("Text files", "txt");
        //jFileChooser1.setFileFilter(filter);
        int returnVal = jFileChooser1.showOpenDialog(Input);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            //String fileName = jFileChooser1.getSelectedFile().getName();
            String filePath = jFileChooser1.getSelectedFile().getPath();
            String fileName = jFileChooser1.getSelectedFile().getName();
            jTextArea1.setText("Uploading File: " + fileName + "\n");
            jTextArea1.append("Path: " + filePath + "\n\n");
            
            StorageTool fileTool = new StorageTool();
            String response = fileTool.uploadFile(filePath);
            
            jTextArea1.append("Server response: " + response);            
            
            /*
            if (success == 200)
            {
                jTextArea1.append("\n" + fileName + " uploaded successfully!");
            }
            else jTextArea1.append("\n" + fileName + " upload FAILED!");
            */
        }        
    }                                        

    private void fileNameFieldMouseClicked(java.awt.event.MouseEvent evt)                                           
    {                                               
        fileNameField.setText("");
        fileNameField.setForeground(Color.BLACK);
    }                                          

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        jTextField1.setText("");
        jTextField1.setForeground(Color.BLACK);
    }                                        

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        jTextField2.setText("");
        jTextField2.setForeground(Color.BLACK);
    }                                        

    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        jTextField3.setText("");
        jTextField3.setForeground(Color.BLACK);
    }                                        

    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        jTextField4.setText("");
        jTextField4.setForeground(Color.BLACK);
    }                                        

    private void fileSrchBtnMouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        String fileName = fileNameField.getText();
        
        if (fileName.isEmpty() || fileName.equals("File Name..."))
        {
            jTextArea1.setText("No file name given.  Please enter a file name and try your search again.");
        }
        else
        {            
            jTextArea1.setText("Searching for " + fileName + "...\n\n");
            //Start search....       
        }
    }                                        

    private void userRgtrBtnMouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        // TODO add your handling code here:
        String name = jTextField1.getText();
        String phon = jTextField2.getText();
        String mail = jTextField3.getText();
        String addr = jTextField4.getText();
        
        if ((name.isEmpty() || name.equals("Name"))
                || (phon.isEmpty() || phon.equals("Phone"))
                || (mail.isEmpty() || mail.equals("eMail"))
                || (addr.isEmpty() || addr.equals("Address")))
        {
            jTextArea1.setText("All user fields must be filled out for registration to occur.  Please try again.");
        }
        else
        {
            jTextArea1.setText("Registering " + name + " (" + phon + ", " + mail +")\n");
            jTextArea1.append("Address: " + addr + "...\n");
            //Start registration....
        }

        
    }                                        

    private void userSrchBtnMouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        // TODO add your handling code here:
        String name = jTextField1.getText();
        String phon = jTextField2.getText();
        String mail = jTextField3.getText();
        String addr = jTextField4.getText();
        
        if ((mail.isEmpty() || mail.equals("eMail")))
        {
            jTextArea1.setText("The user's eMail is required for search.  Please try again.");
        }
        else
        {
            jTextArea1.setText("Searching...\n");
            //Start search....
        }
    }                                        

    private void fileDeltBtnMouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        // TODO add your handling code here:
        String fileName = fileNameField.getText();
        
        if (fileName.isEmpty() || fileName.equals("File Name..."))
        {
            jTextArea1.setText("No file name given.  Please enter a file name and try again.");
        }
        else
        {
            jTextArea1.setText("Deleting " + fileName + "...\n\n");
            //Start storage file delete...            
        }
    }                                        

    private void fileContBtnMouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        // List the contents of the bucket.
        jTextArea1.setText("Retrieving contents of storage...\n\n");
        //Get contents of storage...    
            
    }                                        

    private void fileMetaBtnMouseClicked(java.awt.event.MouseEvent evt)                                         
    {                                             
        // TODO add your handling code here:
        jTextArea1.setText("Retrieving storage metadata information...\n\n");
        //Get metadata of storage...   
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(TestHarnessUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(TestHarnessUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(TestHarnessUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(TestHarnessUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new TestHarnessUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JPanel Input;
    private javax.swing.JPanel Output;
    private javax.swing.JPanel databasePanel;
    private javax.swing.JButton fileContBtn;
    private javax.swing.JButton fileDeltBtn;
    private javax.swing.JButton fileMetaBtn;
    private javax.swing.JTextField fileNameField;
    private javax.swing.JButton fileSrchBtn;
    private javax.swing.JButton fileUpldBtn;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JPanel storagePanel;
    private javax.swing.JButton userRgtrBtn;
    private javax.swing.JButton userSrchBtn;
    // End of variables declaration                   
}
